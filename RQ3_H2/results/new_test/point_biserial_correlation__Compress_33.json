[{"tests": [{"percentage": 5, "test_suites": [{"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 9.278350515463918, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 8.24742268041237, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 6.185567010309279, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 5.154639175257731, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 7.216494845360824, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}]}, {"percentage": 10, "test_suites": [{"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 14.432989690721648, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 13.402061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 10.309278350515463, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 12.371134020618557, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 11.34020618556701, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}]}, {"percentage": 15, "test_suites": [{"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 15.463917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 18.556701030927837, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 17.525773195876287, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 19.587628865979383, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 16.49484536082474, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}]}, {"percentage": 20, "test_suites": [{"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 22.68041237113402, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 23.711340206185564, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 24.742268041237114, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 20.618556701030926, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 21.649484536082475, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}]}, {"percentage": 25, "test_suites": [{"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 25.773195876288657, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 26.804123711340207, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 28.865979381443296, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 27.835051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 29.896907216494846, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}]}, {"percentage": 30, "test_suites": [{"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 34.02061855670103, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 32.98969072164948, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 30.927835051546392, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 31.958762886597935, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}]}, {"percentage": 35, "test_suites": [{"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 39.175257731958766, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}, "statement_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 36.08247422680412, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"checked_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 38.144329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 37.11340206185567, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"checked_coverage": {"score": 35.051546391752574, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}, "statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}]}, {"percentage": 40, "test_suites": [{"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 43.29896907216495, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 40.20618556701031, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 44.329896907216494, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 42.2680412371134, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 41.23711340206185, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}]}, {"percentage": 45, "test_suites": [{"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 49.48453608247423, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 48.45360824742268, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 45.36082474226804, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 47.42268041237113, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 46.391752577319586, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}]}, {"percentage": 50, "test_suites": [{"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 50.51546391752577, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 54.63917525773196, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 51.546391752577314, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 53.608247422680414, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 52.57731958762887, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}]}, {"percentage": 55, "test_suites": [{"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 56.70103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 59.79381443298969, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 57.73195876288659, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 58.76288659793815, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 55.670103092783506, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}]}, {"percentage": 60, "test_suites": [{"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 64.94845360824742, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 61.855670103092784, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 62.88659793814433, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 63.91752577319587, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 60.824742268041234, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}]}, {"percentage": 65, "test_suites": [{"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 79.38144329896907, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 67.0103092783505, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 65.97938144329896, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 69.0721649484536, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 68.04123711340206, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}]}, {"percentage": 70, "test_suites": [{"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 74.22680412371135, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 71.1340206185567, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 73.19587628865979, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 72.16494845360825, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 70.10309278350515, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}]}, {"percentage": 75, "test_suites": [{"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 79.38144329896907, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": false}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 78.35051546391753, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 76.28865979381443, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 77.31958762886599, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 75.25773195876289, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}]}, {"percentage": 80, "test_suites": [{"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testBzip2Unarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DeflateTestCase::testRawDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.GZipTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.BZip2TestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 81.44329896907216, "tests": ["org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadWorksAsExpected", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testMutiples", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipUnarchive", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.XZTestCase::testConcatenatedStreamsReadFirstOnly", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactory", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation"], "is_bug_detecting_test_included": true}}, {"statement_coverage": {"score": 80.41237113402062, "tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testOverride", "org.apache.commons.compress.compressors.XZTestCase::testXZUnarchive", "org.apache.commons.compress.compressors.GZipTestCase::testCorruptedInput", "org.apache.commons.compress.compressors.FramedSnappyTestCase::testDefaultExtractionViaFactoryAutodetection", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::singleByteReadReturnsMinusOneAtEof", "org.apache.commons.compress.compressors.LZMATestCase::testLZMAUnarchiveWithAutodetection", "org.apache.commons.compress.compressors.BZip2TestCase::testBzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaFactory", "org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection", "org.apache.commons.compress.compressors.GZipTestCase::testGzipCreation", "org.apache.commons.compress.compressors.ZTestCase::testZUnarchiveViaAutoDetection", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateCreation", "org.apache.commons.compress.compressors.XZTestCase::testXZCreation", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::shouldBeAbleToSkipAByte", "org.apache.commons.compress.compressors.DeflateTestCase::testDeflateUnarchive", "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest::availableShouldReturnNonZero"], "is_bug_detecting_test_included": true}}]}, {"percentage": 85, "test_suites": []}, {"percentage": 90, "test_suites": []}, {"percentage": 95, "test_suites": []}, {"percentage": 100, "test_suites": []}], "project_id": 33, "list_of_bug_detecting_tests": ["org.apache.commons.compress.compressors.DetectCompressorTestCase::testDetection"]}]